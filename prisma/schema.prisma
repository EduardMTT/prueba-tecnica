// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int @id @default(autoincrement())
  name          String
  lastName      String
  email         String
  phone         String
  role          Role @default(cliente)
  password      String
  reservations  Reservation[]
}
enum Role {
  administrador
  cliente
}

model Category {
  id            Int @id @default(autoincrement())
  name          String
  description   String
  rooms         Room[]
}
 
model Room {
  id                  Int @id @default(autoincrement())
  name                String
  capacity            Int
  description         String
  cost                Decimal
  images              RoomImages[]
  reservations        DetailsReservation[]
  category            Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId   Int
}

model RoomImages {
  id                 Int      @id @default(autoincrement())
  imageUrl           String
  imageKey           String
  room               Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId             Int
}

model Reservation{
  id                  Int @id @default(autoincrement())
  request_date        DateTime
  reservation_date    DateTime
  departure_date      DateTime
  Status              Status @default(pending)
  details_reservation DetailsReservation[]
  user                User @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID              Int
}
enum Status {
  pending
  accepted
  rejected
  canceled
}

model DetailsReservation {
  id                Int @id @default(autoincrement())
  reservationId     Int
  reservation       Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
  room              Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId            Int
}